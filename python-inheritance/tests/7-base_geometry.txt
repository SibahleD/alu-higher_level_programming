# 7-base_geometry.txt

# run test with python3 -m doctest -v ./tests/[filename].txt

First import method to test
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

SUCCESS CASES:

Test present: check instantiation
     >>> bg = BaseGeometry()
     >>> isinstance(bg, BaseGeometry)
     True

Test present: area()
     >>> bg = BaseGeometry()
     >>> bg.area()
     Traceback (most recent call last):
     ...
     Exception: area() is not implemented

Test present: integer_validator()
     >>> bg = BaseGeometry()
     >>> bg.integer_validator("age", 1)
     >>> bg.integer_validator("age", 999)
     >>> bg.integer_validator("age", 1000)

Test present: integer_validator("age")
     >>> bg = BaseGeometry()
     >>> bg.integer_validator("age", 1)

FAIL CASES:

Test present: integer_validator("age", 0)
     >>> bg = BaseGeometry()
     >>> bg.integer_validator("age", 0)
     Traceback (most recent call last):
     ...
     ValueError: age must be greater than 0

Test present: integer_validator("age", -4)
     >>> bg = BaseGeometry()
     >>> bg.integer_validator("age", -4)
     Traceback (most recent call last):
     ...
     ValueError: age must be greater than 0

Test present: integer_validator("age", "4")
     >>> bg = BaseGeometry()
     >>> bg.integer_validator("age", "4")
     Traceback (most recent call last):
     ...
     TypeError: age must be an integer

Test present: integer_validator("age", (4,))
     >>> bg = BaseGeometry()
     >>> bg.integer_validator("age", (4,))
     Traceback (most recent call last):
     ...
     TypeError: age must be an integer

Test present: integer_validator("age", [3])
     >>> bg = BaseGeometry()
     >>> bg.integer_validator("age", [3])
     Traceback (most recent call last):
     ...
     TypeError: age must be an integer

Test present: integer_validator("age", True)
     >>> bg = BaseGeometry()
     >>> bg.integer_validator("age", True)
     Traceback (most recent call last):
     ...
     TypeError: age must be an integer

Test present: integer_validator("age", {3, 4})
     >>> bg = BaseGeometry()
     >>> bg.integer_validator("age", {3, 4})
     Traceback (most recent call last):
     ...
     TypeError: age must be an integer

Test present: integer_validator("age", None)
     >>> bg = BaseGeometry()
     >>> bg.integer_validator("age", None)
     Traceback (most recent call last):
     ...
     TypeError: age must be an integer
